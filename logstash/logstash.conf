input {
  file {
    type => "rest_server"
    path => "/var/log/containers/rest-server*.log"
  }
  file {
    type => "pylon"
    path => "/var/log/containers/pylon*.log"
  }
  file {
    type => "framework_launcher"
    path => "/var/log/containers/frameworklauncher*.log"
  }
  #stdin {
  #  type => "stdin"
  #}
  #file {
  #  type => "syslog"
  #  path => "/var/log/syslog"
  #}
  #syslog {
  #  type => "syslog_server"
  #  host => "localhost"
  #  port => 5140
  #}
}

filter {
  json {
    source => "message"
  }
  mutate {
    gsub => [
      "log", "\e\[\d+m", ""
    ]
  }
  if [type] == "rest_server" {
    grok {
      match => {
        "log" => "%{TIMESTAMP_ISO8601:log_timestamp} \[%{LOGLEVEL:log_level}\] %{WORD:request_method} %{URIPATH:request_uri_path}(%{URIPARAM:request_uri_param}?) %{NUMBER:response_status_code} %{NUMBER:response_time_in_ms} ms - (?<response_content_length_in_bytes>-|\d+)"
      }
    }
    mutate {
      gsub => [
        "response_content_length_in_bytes", "-", "0"
      ]
      convert => {
        "response_status_code" => "integer"
        "response_time_in_ms" => "float"
        "response_content_length_in_bytes" => "integer"
      }
    }
    if [request_method] == "GET" and [request_uri_path] == "/api/v1/jobs" {
      mutate { add_field => { "request_signature" => "GET_api_v1_jobs" } }
    } else if [request_method] == "GET" and [request_uri_path] =~ /^\/api\/v1\/jobs\/[^\/]+$/ {
      mutate { add_field => { "request_signature" => "GET_api_v1_jobs__jobname_" } }
    } else if [request_method] == "POST" and [request_uri_path] == "/api/v1/jobs" {
      mutate { add_field => { "request_signature" => "POST_api_v1_jobs" } }
    } else if [request_method] == "PUT" and [request_uri_path] =~ /^\/api\/v1\/jobs\/[^\/]+$/ {
      mutate { add_field => { "request_signature" => "PUT_api_v1_jobs__jobname_" } }
    } else {
      mutate { add_field => { "request_signature" => "OTHER" } }
    }
  } else if [type] == "pylon" {
   # Do nothing.
  } else if [type] == "framework_launcher" {
   # Do nothing.
  }  else {
    drop { }
  }
}

output {
  #stdout {
  #  codec => rubydebug
  #}
  elasticsearch {
    hosts => ["10.151.40.133"]
    index => "logstash-%{+YYYY.MM.dd}"
  }
}

