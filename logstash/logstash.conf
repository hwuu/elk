input {
  file {
    type => "rest_server"
    path => "/var/log/containers/rest-server*.log"
  }
  #stdin {
  #  type => "stdin"
  #}
  #file {
  #  type => "syslog"
  #  path => "/var/log/syslog"
  #}
  #syslog {
  #  type => "syslog_server"
  #  host => "localhost"
  #  port => 5140
  #}
}

filter {
  json {
    source => "message"
  }
  mutate {
    gsub => [
      "log", "\e\[\d+m", ""
    ]
  }
  grok {
    match => {
      "log" => "%{TIMESTAMP_ISO8601:log_timestamp} \[%{LOGLEVEL:log_level}\] %{WORD:request_method} %{URIPATH:request_uri_path}(%{URIPARAM:request_uri_param}?) %{NUMBER:response_status_code} %{NUMBER:response_time_in_ms} ms - (?<response_content_length_in_bytes>-|\d+)"
    }
    add_field => {
      "request_signature" => "%{request_method}_%{request_uri_path}"
    }
  }
  mutate {
    gsub => [
      "request_signature", "/", "_",
      "response_content_length_in_bytes", "-", "0"
    ]
    convert => {
      "response_status_code" => "integer"
      "response_time_in_ms" => "float"
      "response_content_length_in_bytes" => "integer"
    }
  }
}

output {
  #stdout {
  #  codec => rubydebug
  #}
  elasticsearch {
    hosts => ["localhost"]
    index => "logstash-%{+YYYY.MM.dd}"
  }
}

